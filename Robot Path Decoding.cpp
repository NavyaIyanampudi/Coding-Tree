#include <bits/stdc++.h>
using namespace std;
#define FASTIO ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

string multiplyStrings(string s1, string s2) {
    int countMinus=0;
    if(s1.at(0)=='-'){
        countMinus++;
        s1=s1.substr(1);
    }
    if(s2.at(0)=='-'){
        countMinus++;
        s2=s2.substr(1);
    }
    
    int n = s1.size(),m = s2.size();
    if(n==0 || m==0){
       return "0";
    }
    vector <int>res(n+m,0);
    int i_n=0,i_m=0;
    
    for(int i=n-1;i>=0;i--){
       int carry=0;
       int num1=s1[i]-'0';
       i_m=0;
       for(int j=m-1;j>=0;j--){
           int num2=s2[j]-'0';
           int sum=num1*num2+res[i_n+i_m]+carry;
           carry=sum/10;
           res[i_n+i_m]=sum%10;
           i_m++;
       }
       if(carry){
           res[i_n+i_m]+=carry;
       }
       i_n++;
    }
    int i=res.size()-1;
    while(i>=0 && res[i]==0)
        i--;
    if(i==-1){
        return "0";
    }
    string s = "";
    while(i>=0){
        s+=std::to_string(res[i--]);
    }
    if(s=="0"){
        return "0";
    }
    if(countMinus==1){
        return "-"+s;
    }
    return s;
}

string addStrings(string a, string b) {
        string ans;
        int i=a.size()-1,j=b.size()-1,k=0;
        while(i>=0 && j>=0){
            k+=(a[i]-'0')+(b[j]-'0');
            ans.push_back('0'+ k%10);
            if(k>=10)
                k=1;
            else
                k=0;
            i--;j--;
        }
        while(i>=0){
            k+=(a[i]-'0');
            ans.push_back('0'+ k%10);
            if(k>=10)
                k=1;
            else
                k=0;
            i--;
        }
        while(j>=0){
            k+=(b[j]-'0');
            ans.push_back('0'+ k%10);
            if(k>=10)
                k=1;
            else
                k=0;
            j--;
        }
        if(k)
            ans.push_back('1');
        reverse(ans.begin(),ans.end());
        return ans;
    }
    
bool isSmaller(string str1, string str2){
    int n1 = str1.length(), n2 = str2.length();
    if (n1 < n2)    return true; 
    if (n2 < n1)    return false;
    for (int i=0; i<n1; i++)
    if (str1[i] < str2[i])
        return true;
    else if (str1[i] > str2[i])
        return false;
    return false; 
}
string subStrings(string str1, string str2){
    if (isSmaller(str1, str2)) 
        swap(str1, str2);
    string str = "";
    int n1 = str1.length(), n2 = str2.length(); 
    reverse(str1.begin(), str1.end());
    reverse(str2.begin(), str2.end());
    int carry = 0; 
	for (int i=0; i<n2; i++){
        int sub = ((str1[i]-'0')-(str2[i]-'0')-carry); 
        if (sub < 0){ 
            sub = sub + 10; 
            carry = 1; 
        }else
            carry = 0; 
        str.push_back(sub + '0'); 
    }
    for (int i=n2; i<n1; i++){
        int sub = ((str1[i]-'0') - carry); 
        if (sub < 0){ 
            sub = sub + 10; 
            carry = 1; 
        }else
            carry = 0; 
        str.push_back(sub + '0'); 
    }
    reverse(str.begin(), str.end());  
    return str; 
} 
long long int mod(string num, long long int a){
	long long int res = 0; 
	for (int i = 0; i < num.length(); i++)
		res = (res*10 + (int)num[i] - '0') %a;
	return res; 
} 

int main() {
	FASTIO
	int t;
	cin >>t;
	for(int z=1;z<=t;z++){
        string s;
        cin >> s;
        int n=s.size();
        stack<string> st;
        string x="1",y="1";
        x=addStrings(x,multiplyStrings
        y=addStrings(y,multiplyStrings
        st.push("1");
        for(int i=0;i<n;i++){
            if(s[i]>='2'  && s[i]<='9'){
                st.push(multiplyStrings(st.top(),to_string(s[i]-'0')));
            }else if(s[i]==')'){
                st.pop();
            }else if(s[i]=='('){
                
            }else{
            	// cout << x << " " << y << "\n";
                if(s[i]=='N'){
                    y=subStrings(y,st.top());
                    // y-=st.top();
                }else if(s[i]=='E'){
                    x=addStrings(x,st.top());
                }else if(s[i]=='S'){
                    y=addStrings(y,st.top());
                }else {     //W
                    x=subStrings(x,st.top());
                }
                // x=(1000000000+x-1)%1000000000+1;
                // y=(1000000000+y-1)%1000000000+1;
            }
        }
        x=subStrings(x,"1");
        y=subStrings(y,"1");
        cout << "Case #" << z << ": " << mod(x,1000000000)+1 <<" " << mod(y,1000000000)+1 << "\n";
	}   
	return 0;
}